// Package plans Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// appscode-plans/appscode-community.json
// bytebuilders-plans/bytebuilders-community.json
// guard-plans/guard-community.json
// kubeci-plans/kubeci-community.json
// kubed-plans/kubed-community.json
// kubedb-plans/kubedb-community.json
// kubedb-plans/kubedb-enterprise.json
// kubeform-plans/kubeform-community.json
// kubeshield-plans/kubeshield-community.json
// kubevault-plans/kubevault-community.json
// pharmer-plans/pharmer-community.json
// searchlight-plans/searchlight-community.json
// service-broker-plans/servicebroker-community.json
// stash-cli-plans/stash-kubectl-plugin-community.json
// stash-elasticsearch-plans/elasticsearch-community.json
// stash-mongodb-plans/mongodb-community.json
// stash-mysql-plans/mysql-community.json
// stash-percona-xtradb-plans/percona-xtradb-community.json
// stash-plans/stash-community.json
// stash-postgres-plans/postgresql-community.json
// swift-plans/swift-community.json
// voyager-plans/voyager-community.json
package plans

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _appscodePlansAppscodeCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x41\x6b\x02\x31\x10\x85\xef\xfe\x8a\x21\xe7\xaa\x85\x52\x28\x7b\x6b\x15\x4a\x0b\x8a\xd0\x1e\xbc\x95\x31\x19\xdc\xd4\x24\x13\x32\x13\x41\xca\xfe\xf7\xb2\xab\xab\xd0\x43\x8f\x09\xdf\x7c\xef\xf1\x7e\x26\x00\x26\x92\xa2\x43\x45\xd3\x40\xff\x06\x30\x09\x23\x99\x06\x0c\xe6\x2c\x96\x1d\x4d\x2d\xc7\x58\x93\xd7\x93\xb9\x3b\x13\xb6\x10\xaa\xe7\xf4\xe9\x23\x89\x62\xcc\xa6\x81\x54\x43\x98\x00\x74\x3d\x62\x24\x93\xbd\x09\xbd\xeb\x75\x39\x60\xfa\x7a\x4d\xf6\xe1\x63\xfd\xfd\xf2\xb8\xda\x3e\x6d\xaf\xbe\x31\xf1\x39\x67\x59\xb0\x23\x58\xfc\x4d\xcc\x85\x5d\xb5\xfa\xb6\x1c\x4c\x85\xdd\x60\xe2\x77\x0e\xcb\x8d\x5f\x6f\x56\x57\xae\x45\x39\xab\xac\xfa\x23\x8d\xdf\xbb\x9a\x5c\xa0\x6b\x23\x00\x53\x4b\xe8\xb1\x56\x35\x4b\x33\x9f\x1f\xea\x8e\x32\xda\xc3\x54\x49\xd4\xb6\x58\x54\x66\xa2\x5c\x70\x4f\xb3\x3d\xf3\x3e\x10\x66\x2f\x33\xcb\xf1\xa2\xfc\x7f\xa7\x01\xe9\x2e\xe1\x18\xb9\x26\x35\x0d\xdc\x8f\xf3\xd5\x52\x28\xd9\x53\x7f\x5c\xc5\x8d\x25\x7d\x52\x2a\x47\x1c\x7a\x45\x4e\xda\x9a\xdb\x9e\x8a\x5a\xa5\xef\xdf\x4d\xba\xdf\x00\x00\x00\xff\xff\x50\x83\x75\xec\xb7\x01\x00\x00")

func appscodePlansAppscodeCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_appscodePlansAppscodeCommunityJson,
		"appscode-plans/appscode-community.json",
	)
}

func appscodePlansAppscodeCommunityJson() (*asset, error) {
	bytes, err := appscodePlansAppscodeCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "appscode-plans/appscode-community.json", size: 439, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bytebuildersPlansBytebuildersCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x3d\x4f\xf3\x30\x14\x85\xf7\xfe\x8a\x2b\xcf\x6f\xd3\xbe\x62\xcb\x46\x8a\x5a\x10\x0b\x52\x81\x81\x05\xdd\xd8\x97\xc4\xaa\xbf\x64\x5f\x57\x0a\x28\xff\x1d\x39\x24\xad\xc4\xc2\x68\xeb\xd1\x73\xce\x3d\x5f\x2b\x00\x61\x89\x51\x21\xa3\xa8\xa1\xbc\x01\x84\x43\x4b\xa2\x06\xd1\x0e\x4c\x6d\xd6\x46\x51\x4c\x6b\xe9\xad\xcd\x4e\xf3\x20\xfe\xfd\x50\x32\x12\xb2\xf6\xee\x59\x5b\x4a\x8c\x36\x88\x1a\x5c\x36\x66\x05\x30\x16\x44\xa4\x40\xf2\x2a\xd5\xaa\x28\x83\x41\xf7\x7e\x70\xf2\xe6\xe5\x73\xa7\xf9\xbe\x7b\xdb\x1f\x17\xdf\x92\xda\x0c\x4c\xcd\x9c\x0a\xbb\xdf\xa9\x21\x7a\x95\x25\x3f\xdc\x4d\xb6\xe8\xd5\x64\xdb\x3e\x1d\x3f\x5e\xff\xef\x1f\x0f\xcd\x85\xeb\x31\x4d\xba\x5b\xc9\xfa\x4c\xcb\x77\x9b\x9d\x32\x74\x69\x05\x20\x72\x34\x05\xeb\x99\x43\xaa\x37\x9b\x53\x6e\x29\xa0\x3c\xad\x99\x12\xcb\x1e\x23\xa7\x2a\xb1\x8f\xd8\x51\xd5\x79\xdf\x19\xc2\xa0\x53\x25\xbd\x9d\x95\x7f\xef\x35\x61\xe3\x5c\x00\xad\xcf\x8e\x45\x0d\xdb\x65\xc6\x1c\x23\x39\x39\x14\x41\x4e\x6a\x29\xaa\x1d\x53\x3c\xe3\xd4\xcd\x7a\xc7\xbd\xb8\xee\xca\xc8\x39\x95\x1b\xc6\xd5\xf8\x1d\x00\x00\xff\xff\x13\xb5\xf6\x41\xc3\x01\x00\x00")

func bytebuildersPlansBytebuildersCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_bytebuildersPlansBytebuildersCommunityJson,
		"bytebuilders-plans/bytebuilders-community.json",
	)
}

func bytebuildersPlansBytebuildersCommunityJson() (*asset, error) {
	bytes, err := bytebuildersPlansBytebuildersCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bytebuilders-plans/bytebuilders-community.json", size: 451, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _guardPlansGuardCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x4f\x4b\xc3\x40\x10\xc5\xef\xfd\x14\xc3\x9e\x6d\x5a\x10\x3c\xe4\x56\x15\x8a\x47\x45\x44\xbd\xc8\x64\x77\x48\x96\xee\x3f\x76\x67\x02\x41\xf2\xdd\x65\x63\xd3\x82\x07\x8f\xbb\xef\xcd\xef\x3d\xde\xf7\x06\x40\x79\x62\x34\xc8\xa8\x5a\xa8\x6f\x00\x15\xd0\x93\x6a\x41\xf5\x82\xd9\x6c\x75\xf4\x5e\x82\xe5\x49\xdd\xfc\xca\x3a\x13\xb2\x8d\xe1\xd5\x7a\x2a\x8c\x3e\xa9\x16\x82\x38\xb7\x01\x98\xab\x45\x95\x44\xfa\x4a\xb3\xa6\xb2\x92\xc3\xf0\x75\x0c\xfa\xf6\xed\x8e\xec\xbb\x79\x1e\xf9\x7e\xe5\xad\x71\xc7\x1a\x07\x0f\x7f\xe3\x52\x8e\x46\x34\x3f\x3d\x2e\x98\x1c\xcd\x82\xd9\x4f\x2f\x7e\x38\x94\xee\xf3\xe3\xe2\x1b\xb0\x2c\x9c\x83\x66\x3b\xd2\xfa\xdd\x49\x30\x8e\x2e\x75\x00\x94\x64\x57\x6d\x03\x73\x2a\xed\x6e\x77\x92\x8e\x12\xea\xd3\x96\xa9\xb0\x1e\x30\x73\x69\x0a\xc7\x8c\x3d\x35\x7d\x8c\xbd\x23\x4c\xb6\x34\x3a\xfa\x33\xf2\x9f\x85\x16\x7d\x3e\x27\xa3\x8f\x12\x58\xb5\xb0\x5f\x87\x93\x9c\x29\xe8\xa9\x5e\x4a\x31\x6b\x43\x1b\x98\xf2\x88\x4b\x29\x1f\x03\x0f\xea\xba\x24\x23\x4b\xa9\xe5\xe7\xcd\xfc\x13\x00\x00\xff\xff\x41\xbe\x18\x39\xae\x01\x00\x00")

func guardPlansGuardCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_guardPlansGuardCommunityJson,
		"guard-plans/guard-community.json",
	)
}

func guardPlansGuardCommunityJson() (*asset, error) {
	bytes, err := guardPlansGuardCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "guard-plans/guard-community.json", size: 430, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kubeciPlansKubeciCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x4f\x4b\x03\x31\x10\xc5\xef\xfd\x14\x43\xce\x76\xab\xa8\x97\xbd\x49\x45\x2d\x5e\x44\xd4\xab\xcc\x26\xc3\x6e\x6c\xfe\x91\xcc\x14\x16\xd9\xef\x2e\x59\xbb\x2d\x78\xf0\x98\xcc\x9b\xdf\x7b\xf3\xbe\x57\x00\xca\x13\xa3\x41\x46\xd5\x42\x7d\x03\xa8\x80\x9e\x54\x0b\x6a\x2f\x1d\x69\xbb\xd6\xd1\x7b\x09\x96\x47\x75\xf1\x3b\xd7\x99\x90\x6d\x0c\x6f\xd6\x53\x61\xf4\x49\xb5\x10\xc4\xb9\x15\xc0\x54\x25\xaa\x24\xd2\x67\x9c\x35\x15\x96\x1c\x86\xcf\xc7\xa0\xaf\x6f\xdf\x87\x2e\x5f\xbd\x9a\x87\xb2\xf0\x16\xbf\x67\xe9\x68\xbb\x83\xed\x5f\xbf\x94\xa3\x11\xcd\xbb\xfb\x99\x93\xa3\x99\x39\x1f\xf6\x69\x7c\xf9\xea\x6f\x08\x4f\xba\x01\xcb\x0c\xba\xd3\x6c\x0f\xb4\x7c\x77\x12\x8c\xa3\x53\x1e\x00\x25\xd9\x55\xd9\xc0\x9c\x4a\xbb\xd9\xd4\x3b\x13\xea\xfd\x9a\xa9\xb0\x1e\x30\x73\x69\x0a\xc7\x8c\x3d\x35\x7d\x8c\xbd\x23\x4c\xb6\x34\x3a\xfa\x23\xf2\xbf\x8e\x66\xc1\x74\xb4\x46\x1f\x25\xb0\x6a\xe1\x72\xa9\x4e\x72\xa6\xa0\xc7\xba\x2a\xc5\x2c\x11\x6d\x60\xca\x07\x9c\x53\xf9\x18\x78\x50\xe7\x2e\x19\x59\x4a\x4d\x3f\xad\xa6\x9f\x00\x00\x00\xff\xff\x4f\xa0\x28\x0a\xb1\x01\x00\x00")

func kubeciPlansKubeciCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_kubeciPlansKubeciCommunityJson,
		"kubeci-plans/kubeci-community.json",
	)
}

func kubeciPlansKubeciCommunityJson() (*asset, error) {
	bytes, err := kubeciPlansKubeciCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kubeci-plans/kubeci-community.json", size: 433, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kubedPlansKubedCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x4f\x4b\x03\x31\x10\xc5\xef\xfd\x14\x43\xce\x76\x2b\xa8\x28\x7b\x13\xff\x2c\x22\xf4\xe4\x45\x2f\x32\x4d\x86\xdd\xd0\x64\x12\x93\xc9\x42\x91\xfd\xee\x92\xb5\xdb\x82\x07\x8f\xc9\x7b\xf9\xbd\x97\xf7\xbd\x02\x50\x9e\x04\x0d\x0a\xaa\x16\xea\x19\x40\x31\x7a\x52\x2d\xa8\x7d\xd9\x91\x59\xeb\xe0\x7d\x61\x2b\x07\x75\xf1\x2b\xeb\x44\x28\x36\xf0\x9b\xf5\x94\x05\x7d\x54\x2d\x70\x71\x6e\x05\x30\x55\x8b\xca\x91\xf4\x99\x66\x4d\x65\x45\x87\xfc\xd9\xb1\xbe\xba\xdd\x46\xbe\x1e\xbb\xe7\xb8\x5d\x78\x4b\xdc\x6b\x8d\x83\x87\xbf\x71\x31\x05\x53\xb4\xbc\x3c\xce\x98\x14\xcc\x8c\xe9\xbe\xee\xf8\xc6\x3c\x7d\x94\xf7\x93\x6f\xc0\x3c\x73\xee\xb5\xd8\x91\x96\xeb\x5d\x61\xe3\xe8\x54\x07\x40\x95\xe4\xaa\x6d\x10\x89\xb9\xdd\x6c\xea\x2f\x23\xea\xfd\x5a\x28\x8b\x1e\x30\x49\x6e\xb2\x84\x84\x3d\x35\x7d\x08\xbd\x23\x8c\x36\x37\x3a\xf8\x23\xf2\x9f\x85\x66\x7d\x3a\x26\xa3\x0f\x85\x45\xb5\x70\xb9\x0c\x57\x52\x22\xd6\x87\xfa\xb2\x64\xb3\x34\xb4\x2c\x94\x46\x9c\x4b\xf9\xc0\x32\xa8\xf3\x92\x82\x52\x72\x2d\x3f\xad\xa6\x9f\x00\x00\x00\xff\xff\xbf\x86\x41\xd9\xae\x01\x00\x00")

func kubedPlansKubedCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_kubedPlansKubedCommunityJson,
		"kubed-plans/kubed-community.json",
	)
}

func kubedPlansKubedCommunityJson() (*asset, error) {
	bytes, err := kubedPlansKubedCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kubed-plans/kubed-community.json", size: 430, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kubedbPlansKubedbCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\x4d\x6b\xe3\x30\x10\x86\xef\xf9\x15\x83\xce\x9b\x64\x21\x2c\x4b\x7c\xdb\x6d\x48\x49\x0b\x85\x96\x1e\x7a\x2b\x63\x69\x1a\x8b\xe8\xab\xa3\x91\x21\x14\xff\xf7\x22\x37\x4e\x4a\x29\x3d\xda\xf3\xe8\x9d\x47\x7a\xdf\x66\x00\xca\x93\xa0\x41\x41\xd5\x40\xfd\x06\x50\x01\x3d\xa9\x06\xd4\xa1\xb4\x64\xda\xb9\x8e\xde\x97\x60\xe5\xa8\x7e\x7d\xcc\x35\x13\x8a\x8d\xe1\xd1\x7a\xca\x82\x3e\xa9\x06\x42\x71\x6e\x06\x30\x54\x44\xe5\x44\xfa\x12\x67\x4d\x0d\x4b\x0e\xc3\xf3\x75\xd0\xab\xd7\xbe\xdd\xfe\xe1\xdd\xfd\xdf\xa7\x29\x6f\xda\x77\x5b\x5a\xda\xfc\x87\xab\xaf\xfb\x8c\xcd\xc9\xe1\xf1\xee\x13\x66\xda\x6f\x30\xca\x9a\x6d\xaa\x66\x15\xdb\x32\x11\xc4\x44\x01\x72\x2c\xac\x09\xc8\xd8\x3a\x83\x97\xc8\x20\x94\x05\x30\x18\x30\xd4\x93\x8b\xc9\x53\x90\x29\x27\x71\x34\x45\xcb\x6e\x33\x6a\x73\x34\xa3\xf6\xaa\xbd\x39\xe0\xda\x3e\xb8\xf5\x99\xeb\x30\x8f\x42\xff\xb4\xd8\x9e\xa6\xdf\x6d\x09\xc6\xd1\xf9\xfa\x00\xaa\xb0\xab\x58\x27\x92\x72\xb3\x5c\xd6\x67\x4d\xa8\x0f\xf3\x2a\xa1\x3b\x64\xc9\x8b\x2c\x91\x71\x4f\x8b\x7d\x8c\x7b\x47\x98\x6c\x5e\xe8\xe8\x4f\x91\x3f\x55\x32\x02\xc3\x69\x35\xfa\x58\x82\xa8\x06\x7e\x4f\x4d\x15\x66\x0a\xfa\x58\x8f\x96\x6c\x26\x45\x1b\x84\xb8\xc7\xd1\xca\xc7\x20\x9d\xba\x54\x27\x28\x25\x57\xfb\x61\x36\xbc\x07\x00\x00\xff\xff\x19\x32\x27\x22\x20\x02\x00\x00")

func kubedbPlansKubedbCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_kubedbPlansKubedbCommunityJson,
		"kubedb-plans/kubedb-community.json",
	)
}

func kubedbPlansKubedbCommunityJson() (*asset, error) {
	bytes, err := kubedbPlansKubedbCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kubedb-plans/kubedb-community.json", size: 544, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kubedbPlansKubedbEnterpriseJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\x4d\x6b\xe3\x30\x10\x86\xef\xf9\x15\x83\xce\x9b\x04\x92\x93\x7d\xdb\xc5\xbb\x61\xb3\x1f\x2d\xa5\x3d\xf4\x14\xc6\xd2\x34\x16\xd1\x17\xd2\x28\xc1\x14\xff\xf7\x22\x27\x4e\x0a\x2d\xbd\x69\xe0\xd1\x33\xef\xcc\xbc\xce\x00\x84\x25\x46\x85\x8c\xa2\x86\x52\x03\x08\x87\x96\x44\x0d\xe2\x90\x5b\x52\xed\x9c\x1c\x53\x0c\x51\x27\x12\xdf\xce\x80\x8c\x84\xac\xbd\x7b\xd4\x96\x12\xa3\x0d\xa2\x06\x97\x8d\x99\x01\x0c\x05\x11\x29\x90\xbc\xf9\xb4\x2a\xb6\x60\xd0\xed\x36\xee\xb4\xf9\xf5\xf7\xe9\xee\xdf\xb3\xb1\x2f\xdb\xc9\x37\x35\xfc\x93\x5b\x6a\x7e\xc0\xcf\x0f\x0d\x95\x4e\xc1\x60\xff\xff\x1d\xa7\xda\xcf\x38\x4a\x32\xea\x50\xb2\x15\xee\x3e\x7a\x95\x65\xa9\x20\x12\xaa\x1e\x1a\x64\x6c\x31\x51\x82\x93\xe6\x0e\x1a\xec\x61\x05\x3e\x50\x1c\xc7\x01\xcc\xec\xed\xf8\x9c\x84\xe1\x6c\xf8\xdd\x8c\x13\x44\xaf\x76\x1b\x27\xd7\xeb\x76\x7b\xc0\x4a\x3f\x98\xea\xca\x75\x98\xc6\x68\xdf\x25\xeb\xe3\x35\x4f\x9b\x9d\x32\x74\xdd\x04\x80\xc8\xd1\x14\xac\x63\x0e\xa9\x5e\x2e\xcb\x8a\x03\xca\xc3\x9c\x29\xb1\xec\x30\x72\x5a\x24\xf6\x11\xf7\xb4\xd8\x7b\xbf\x37\x84\x41\xa7\x85\xf4\xf6\xa2\xfc\xf2\x3c\x23\x31\x5c\x7a\xa3\xf5\xd9\xb1\xa8\x61\x55\x55\xd3\xdd\x72\x8c\xe4\x64\x5f\x7e\xe7\xa4\xa6\x94\xba\x18\x8e\x38\x06\xb3\xde\x71\x27\x6e\x87\x64\xe4\x9c\xca\x00\xc3\x6c\x78\x0b\x00\x00\xff\xff\xa7\xf7\x70\xa5\x2f\x02\x00\x00")

func kubedbPlansKubedbEnterpriseJsonBytes() ([]byte, error) {
	return bindataRead(
		_kubedbPlansKubedbEnterpriseJson,
		"kubedb-plans/kubedb-enterprise.json",
	)
}

func kubedbPlansKubedbEnterpriseJson() (*asset, error) {
	bytes, err := kubedbPlansKubedbEnterpriseJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kubedb-plans/kubedb-enterprise.json", size: 559, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kubeformPlansKubeformCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xbd\x6a\xc3\x30\x14\x85\x77\x3f\xc5\x45\x73\xe3\x34\x64\xf3\x56\x5a\x28\xa6\x14\x4a\x09\x64\x2c\x37\xd2\xad\x2d\xac\x3f\xa4\xab\x04\x53\xfc\xee\x45\xae\x9d\x40\x87\x8c\x12\x9f\xbe\x73\x74\x7e\x2a\x00\x61\x89\x51\x21\xa3\x68\xa0\x9c\x01\x84\x43\x4b\xa2\x01\x31\xe4\x13\x7d\xfb\x68\x37\xd2\x5b\x9b\x9d\xe6\x51\x3c\xfc\x11\x32\x12\xb2\xf6\xee\xa0\x2d\x25\x46\x1b\x44\x03\x2e\x1b\x53\x01\x4c\x05\x11\x29\x90\xbc\x09\xb5\x2a\xba\x60\xd0\x7d\xbd\x3a\xb9\x3f\xb6\xed\xa1\x1d\x71\xaf\x2f\xab\x6f\x4d\x7c\x5b\x12\xe1\xf9\x7f\x62\x88\x5e\x65\xc9\xed\xcb\x6c\x8a\x5e\xcd\xa6\xcf\x1d\xe3\xe5\xe3\xb8\x7b\x1f\xae\x5c\x8f\x69\x56\x3d\x49\xd6\x67\x5a\xaf\x4f\xd9\x29\x43\xd7\x46\x00\x22\x47\x53\xb0\x9e\x39\xa4\x66\xbb\x2d\x7f\x0d\x28\x87\x0d\x53\x62\xd9\x63\xe4\x54\x27\xf6\x11\x3b\xaa\x3b\xef\x3b\x43\x18\x74\xaa\xa5\xb7\x8b\xf2\xfe\x4e\x33\x32\x2d\xe1\x68\x7d\x76\x2c\x1a\x78\x5c\xe7\xcb\x31\x92\x93\x63\x79\x9c\x93\x5a\x4b\x6a\xc7\x14\xcf\x38\xf7\xb2\xde\x71\x2f\x6e\x7b\x32\x72\x4e\xa5\xff\x54\x4d\xbf\x01\x00\x00\xff\xff\xa9\x6e\x11\xb3\xb7\x01\x00\x00")

func kubeformPlansKubeformCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_kubeformPlansKubeformCommunityJson,
		"kubeform-plans/kubeform-community.json",
	)
}

func kubeformPlansKubeformCommunityJson() (*asset, error) {
	bytes, err := kubeformPlansKubeformCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kubeform-plans/kubeform-community.json", size: 439, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kubeshieldPlansKubeshieldCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x4f\x4b\xc3\x40\x10\xc5\xef\xf9\x14\xc3\x9e\x6d\x2a\x7a\x32\x37\x51\xa8\x52\xea\xa5\x45\xd0\x8b\x4c\x76\x87\xec\xd2\xfd\xc7\xee\x6c\xa1\x48\xbe\xbb\x6c\x6c\x52\xf0\xe2\x31\xe1\xb7\xbf\xf7\xe6\x7d\x37\x00\xc2\x11\xa3\x42\x46\xd1\x41\xfd\x06\x10\x1e\x1d\x89\x0e\xc4\xb1\xf4\x94\xb5\x21\xab\x56\x32\x38\x57\xbc\xe1\xb3\xb8\xf9\x65\x64\x22\x64\x13\xfc\xc1\x38\xca\x8c\x2e\x8a\x0e\x7c\xb1\xb6\x01\x18\x2b\x22\x72\x24\x79\x55\x1a\x55\x85\xd1\xa2\xff\xda\x78\x79\xdf\xeb\xc3\xee\xe1\x6d\x18\x5e\x36\xb3\x6f\xce\xdc\x2e\x99\xf0\xf4\x37\x33\xa6\xa0\x8a\xe4\xd7\xe7\xc9\x95\x82\x9a\x5c\xbb\xfd\x9e\xb7\xef\x1f\xf6\xf3\x6e\xe1\x34\xe6\x49\xf6\x28\xd9\x9c\x68\xfe\xdd\x17\xaf\x2c\x2d\x9d\x00\x44\x49\xb6\x62\x9a\x39\xe6\x6e\xbd\xae\xf7\x46\x94\xc7\x15\x53\x66\xa9\x31\x71\x6e\x33\x87\x84\x03\xb5\x43\x08\x83\x25\x8c\x26\xb7\x32\xb8\x8b\xf2\xbf\xad\x26\x68\xbc\xc4\xa3\x0b\xc5\xb3\xe8\xe0\x76\x9e\xb0\xa4\x44\x5e\x9e\xeb\xf3\x92\xd5\x5c\xd3\x78\xa6\x74\xc2\xa9\x99\x0b\x9e\xb5\xb8\x6e\xca\xc8\x25\xd7\x0b\xc6\x66\xfc\x09\x00\x00\xff\xff\xd8\xab\x27\x26\xbd\x01\x00\x00")

func kubeshieldPlansKubeshieldCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_kubeshieldPlansKubeshieldCommunityJson,
		"kubeshield-plans/kubeshield-community.json",
	)
}

func kubeshieldPlansKubeshieldCommunityJson() (*asset, error) {
	bytes, err := kubeshieldPlansKubeshieldCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kubeshield-plans/kubeshield-community.json", size: 445, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kubevaultPlansKubevaultCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x4f\x4b\xc3\x40\x10\xc5\xef\xfd\x14\xc3\x9e\x6d\x2b\x88\x97\xdc\x4a\x05\x11\x69\xa5\x20\x1e\xbc\xc8\x64\x77\x4c\x96\xee\x3f\x76\x67\x02\x55\xf2\xdd\x65\x63\xd3\x82\x17\x8f\x09\xbf\xfd\xbd\x37\xef\x7b\x01\xa0\x3c\x31\x1a\x64\x54\x0d\xd4\x6f\x00\x15\xd0\x93\x6a\x40\x1d\xa5\xa5\x01\xc5\xf1\x52\x47\xef\x25\x58\x3e\xa9\x9b\x5f\x44\x67\x42\xb6\x31\xbc\x5a\x4f\x85\xd1\x27\xd5\x40\x10\xe7\x16\x00\x63\x45\x54\x49\xa4\xaf\x46\x6b\xaa\x2f\x39\x0c\x1f\x8f\x41\xdf\x7d\xed\xf5\xee\xe5\xfe\x3d\xed\xda\xd9\x37\x47\x3e\x4b\x4b\x6f\x35\x12\xb6\x7f\x23\x53\x8e\x46\x34\x3f\x3d\x4c\xaa\x1c\xcd\xa4\x3a\x7c\xee\xfd\x96\x77\x87\x0d\x5e\xb8\x1e\xcb\xe4\xda\x68\xb6\x03\xcd\xbf\x5b\x09\xc6\xd1\xa5\x12\x80\x92\xec\x2a\xd6\x33\xa7\xd2\xac\xd7\xf5\xda\x84\xfa\xb8\x64\x2a\xac\x7b\xcc\x5c\x56\x85\x63\xc6\x8e\x56\x5d\x8c\x9d\x23\x4c\xb6\xac\x74\xf4\x67\xe5\x3f\x4b\x4d\xcc\x78\x4e\x47\x1f\x25\xb0\x6a\xe0\x76\x1e\x50\x72\xa6\xa0\x4f\xf5\xb5\x14\x33\xb7\xb4\x81\x29\x0f\x38\x15\xf3\x31\x70\xaf\xae\x8b\x32\xb2\x94\x7a\xc0\xb8\x18\x7f\x02\x00\x00\xff\xff\xdc\x5a\x1f\x10\xba\x01\x00\x00")

func kubevaultPlansKubevaultCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_kubevaultPlansKubevaultCommunityJson,
		"kubevault-plans/kubevault-community.json",
	)
}

func kubevaultPlansKubevaultCommunityJson() (*asset, error) {
	bytes, err := kubevaultPlansKubevaultCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kubevault-plans/kubevault-community.json", size: 442, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pharmerPlansPharmerCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xbb\x6a\x33\x31\x10\x85\x7b\x3f\xc5\xa0\xfa\xf7\x05\xfe\x6e\xbb\x90\x38\xb7\x26\x4e\xb0\x9b\x34\x61\x2c\x0d\x96\xb0\x6e\x8c\x46\x0b\x26\xec\xbb\x87\x95\xbd\x36\xa4\x48\x29\xf1\xcd\x77\x0e\xe7\x7b\x06\xa0\x02\x09\x1a\x14\x54\x1d\x8c\x6f\x00\x15\x31\x90\xea\x40\x65\x8b\x1c\x88\xe7\x3a\x85\x50\xa3\x93\x93\xfa\x77\x06\x34\x13\x8a\x4b\x71\xeb\x02\x15\xc1\x90\x55\x07\xb1\x7a\x3f\x03\x18\x46\x44\x95\x4c\xfa\xe6\x73\xa6\xd9\x3c\xc6\xaf\xa7\xa8\xff\x6f\xd6\x9f\xfd\xee\xf1\x75\xb7\x3e\x4e\xbe\x29\x70\x73\x0e\x84\xfb\xdf\x81\x99\x93\xa9\x5a\x5e\x1e\x9a\x88\x93\x69\x22\x2b\x5b\x7e\xa6\xf7\x8f\xd5\xdb\x95\xb3\x58\x9a\xe9\x4e\x8b\xeb\x69\xfa\xde\xd7\x68\x3c\x5d\x0b\x01\xa8\xca\x7e\xc4\xac\x48\x2e\xdd\x72\x79\xac\x7b\xca\xa8\x8f\x73\xa1\x22\xda\x22\x4b\x59\x14\x49\x8c\x07\x5a\x1c\x52\x3a\x78\xc2\xec\xca\x42\xa7\x70\x51\xfe\xb9\x52\x23\x86\x4b\x36\x86\x54\xa3\xa8\x0e\x56\xd3\x78\x95\x99\xa2\x3e\x8d\xb7\xb5\x98\xa9\xa3\x8b\x42\xdc\x63\xab\x15\x52\x14\xab\x6e\x6b\x0a\x4a\x2d\x63\xfd\x61\x36\xfc\x04\x00\x00\xff\xff\x23\xfb\xb8\x3f\xb4\x01\x00\x00")

func pharmerPlansPharmerCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_pharmerPlansPharmerCommunityJson,
		"pharmer-plans/pharmer-community.json",
	)
}

func pharmerPlansPharmerCommunityJson() (*asset, error) {
	bytes, err := pharmerPlansPharmerCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pharmer-plans/pharmer-community.json", size: 436, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _searchlightPlansSearchlightCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xcd\x4a\x03\x31\x14\x85\xf7\x7d\x8a\x4b\xd6\x76\x2a\xe8\xa2\xcc\x4e\x54\x8a\xa5\x16\xc1\x9f\xad\xdc\x26\x97\x49\x68\xfe\x4c\x6e\x06\x8a\xcc\xbb\x4b\xc6\x4e\x07\xdc\xb8\x4c\xf8\xf2\x9d\x93\xf3\xbd\x00\x10\x8e\x18\x15\x32\x8a\x16\xea\x19\x40\x78\x74\x24\x5a\x10\x99\x30\x49\x6d\x4d\xa7\x79\x29\x83\x73\xc5\x1b\x3e\x89\xab\x5f\x48\x26\x42\x36\xc1\xbf\x19\x47\x99\xd1\x45\xd1\x82\x2f\xd6\x2e\x00\x86\x8a\x88\x1c\x49\xce\x4e\xa3\xaa\x31\x5a\xf4\x9f\x1b\x2f\x6f\x76\x65\xbf\xdf\xbc\xac\xed\xf3\xc7\xe4\x9b\x42\x5f\xe7\x50\xb8\xff\x1b\x1a\x53\x50\x45\xf2\xd3\xc3\x28\x4b\x41\x8d\xb2\xfe\x71\xbb\xdb\x7e\xad\xe3\xfb\xed\x85\xd3\x98\x47\xdb\x9d\x64\xd3\xd3\x74\x7d\x28\x5e\x59\xba\x94\x02\x10\x25\xd9\x8a\x69\xe6\x98\xdb\xd5\xea\x58\x0e\x14\x51\x1e\x97\x4c\x99\xa5\xc6\xc4\xb9\xc9\x1c\x12\x76\xd4\x74\x21\x74\x96\x30\x9a\xdc\xc8\xe0\xce\xca\x7f\xd7\x1a\xa9\xe1\x9c\x8f\x2e\x14\xcf\xa2\x85\xeb\x69\xc4\x92\x12\x79\x79\xaa\xef\x4b\x56\x53\x4f\xe3\x99\x52\x8f\x63\x35\x17\x3c\x6b\x31\xaf\xca\xc8\x25\xd7\x2f\x0c\x8b\xe1\x27\x00\x00\xff\xff\x31\x6a\xb9\x3a\xc0\x01\x00\x00")

func searchlightPlansSearchlightCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_searchlightPlansSearchlightCommunityJson,
		"searchlight-plans/searchlight-community.json",
	)
}

func searchlightPlansSearchlightCommunityJson() (*asset, error) {
	bytes, err := searchlightPlansSearchlightCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "searchlight-plans/searchlight-community.json", size: 448, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceBrokerPlansServicebrokerCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\xbb\x6a\x33\x31\x10\x85\x7b\x3f\xc5\xa0\xfa\xf7\x05\xfe\x54\xdb\x39\x0e\xe4\x02\xc1\x84\xa4\x48\xd2\x84\xb1\x34\xd9\x15\x5e\x5d\x18\x8d\x16\x4c\xd8\x77\x0f\x92\xbd\x36\xc4\xa5\xc4\xc7\x77\xce\x9c\x9f\x19\x80\x72\x24\x68\x50\x50\x35\x50\xde\x00\xca\xa3\x23\xd5\x80\x4a\xc4\x83\xd5\xb4\xe3\xb0\x27\x9e\xeb\xe0\x5c\xf6\x56\x0e\xea\xdf\x11\xd3\x4c\x28\x36\xf8\x37\xeb\x28\x09\xba\xa8\x1a\xf0\xb9\xef\x67\x00\x63\x41\x54\x8a\xa4\x2f\x56\x6b\x8a\x33\xf6\xe8\xbf\xee\xbd\xfe\xbf\xed\x36\xf6\xf9\x85\xd6\xdb\x8f\xc9\x37\xc5\xbe\x1e\x63\x6f\x6b\x2c\x6c\xfe\xc6\x46\x0e\x26\x6b\x79\xbc\xab\x3a\x0e\xa6\xea\x9e\x56\x37\xa6\x7d\x1f\x3e\x1f\xbe\xcf\x5c\x87\xa9\xfa\xd6\x5a\xec\x40\xd3\xf7\x2e\x7b\xd3\xd3\xb9\x16\x80\xca\xdc\x17\xac\x13\x89\xa9\x59\x2e\xf7\x79\x47\x11\xf5\x7e\x2e\x94\x44\x77\xc8\x92\x16\x49\x02\x63\x4b\x8b\x36\x84\xb6\x27\x8c\x36\x2d\x74\x70\x27\xe5\xf5\x62\xf3\xab\xc9\x2a\x38\x9e\x2a\xa0\x0b\xd9\x8b\x6a\x60\x35\x2d\x99\x99\xc9\xeb\x43\x51\xe4\x64\xa6\xaa\xd6\x0b\xf1\x80\xb5\x9d\x0b\x5e\x3a\x75\x99\x56\x50\x72\x2a\x57\x8c\xb3\xf1\x37\x00\x00\xff\xff\x04\x19\x10\x97\xc7\x01\x00\x00")

func serviceBrokerPlansServicebrokerCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_serviceBrokerPlansServicebrokerCommunityJson,
		"service-broker-plans/servicebroker-community.json",
	)
}

func serviceBrokerPlansServicebrokerCommunityJson() (*asset, error) {
	bytes, err := serviceBrokerPlansServicebrokerCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service-broker-plans/servicebroker-community.json", size: 455, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stashCliPlansStashKubectlPluginCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\x4d\x4b\x33\x31\x14\x85\xf7\xfd\x15\x97\xac\xdf\x69\x0b\x2f\x22\xcc\x4e\xb4\x14\x41\xb0\xa0\xae\xe5\xf6\xce\x75\x26\x34\x5f\x24\x37\xc5\x2a\xf3\xdf\x25\x71\xa6\x15\x5d\x26\x9c\x3c\xcf\xc9\xf9\x5c\x00\x28\xcb\x82\x1d\x0a\xaa\x16\xca\x19\x40\x39\xb4\xac\x5a\x50\x49\x30\x0d\xcd\x21\xef\x99\xc4\x34\xc1\xe4\x5e\xbb\x86\xbc\xb5\xd9\x69\x39\xa9\x7f\xdf\x69\x8a\x8c\xa2\xbd\x7b\xd6\x96\x93\xa0\x0d\xaa\x05\x97\x8d\x59\x00\x8c\x25\xa2\x52\x60\xba\xc0\x75\x57\xd0\xc1\xa0\x7b\xdd\x3a\xfa\xaf\x37\xeb\x97\x0f\xe6\x35\x85\x99\x37\xdb\x9f\x8a\x1d\x26\x3b\xec\xaa\x1d\x6e\x7f\xdb\x43\xf4\x5d\x26\xb9\xbf\xab\xd4\xe8\xbb\x4a\x7d\xdf\x5e\x3f\xee\xde\xae\x1e\xc2\xe6\x9c\x1b\x30\x55\xec\x0d\x89\x3e\xf2\x7c\xbd\xcf\xae\x33\x7c\x6e\x07\xa0\x72\x34\x25\x36\x88\x84\xd4\xae\x56\xc5\x1f\x90\x0e\x8d\x70\x12\x1a\x30\x4a\x5a\x26\xf1\x11\x7b\x5e\xf6\xde\xf7\x86\x31\xe8\xb4\x24\x6f\x27\xe4\x9f\xfd\xc8\xe8\x1f\xa3\xd5\xcc\x38\xd9\xd1\xfa\xec\x44\xb5\xb0\x9e\xb7\xcc\x31\xb2\xa3\x53\x79\x9d\x53\x37\xb7\xd4\x4e\x38\x1e\xb1\x16\xb3\xde\xc9\xa0\x2e\xe3\x0a\x4a\x4e\xe5\x03\xe3\x62\xfc\x0a\x00\x00\xff\xff\x6d\x78\x1e\x8a\xd0\x01\x00\x00")

func stashCliPlansStashKubectlPluginCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_stashCliPlansStashKubectlPluginCommunityJson,
		"stash-cli-plans/stash-kubectl-plugin-community.json",
	)
}

func stashCliPlansStashKubectlPluginCommunityJson() (*asset, error) {
	bytes, err := stashCliPlansStashKubectlPluginCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stash-cli-plans/stash-kubectl-plugin-community.json", size: 464, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stashElasticsearchPlansElasticsearchCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\x4f\x4b\x03\x31\x10\xc5\xef\xfd\x14\x43\xce\xf6\x1f\x7a\xda\x9b\x58\x29\xd5\x4b\x0f\x82\xe8\x45\xa6\xd9\xb1\x1b\x9a\x4c\x42\x66\xb2\x52\x64\xbf\xbb\xec\xda\x6d\x8b\xe0\x31\xe1\xf1\x7b\xbf\x79\xdf\x13\x00\x13\x48\xb1\x46\x45\x53\x41\xff\x06\x30\x8c\x81\x4c\x05\x86\x3c\x8a\x3a\x2b\x84\xd9\x36\x53\x1b\x43\x28\xec\xf4\x68\x6e\x7e\x63\x36\x13\xaa\x8b\xfc\xe2\x02\x89\x62\x48\xa6\x02\x2e\xde\x4f\x00\xba\x3e\x62\x24\x91\xbd\x50\x5d\xdd\x33\x93\x47\xfe\x58\xb3\xbd\xfd\x7c\x5f\xf0\xd7\xa6\x5d\xbd\x2d\x47\xde\x58\xfb\x78\x5d\x0b\x0f\x7f\x6b\x53\x8e\x75\xb1\xba\x59\x0d\xb8\x1c\xeb\x01\xf7\xba\x5e\xe6\xbb\xe5\x76\xfb\xfc\x74\xce\x35\x28\x03\xef\xde\xaa\x6b\x69\xfc\xde\x15\xae\x3d\x9d\xb5\x00\x4c\xc9\xbe\x8f\x35\xaa\x49\xaa\xf9\xfc\x50\x76\x94\xd0\x1e\xa6\x4a\xa2\xb6\xc1\xac\x32\x13\x8d\x19\xf7\x34\xdb\xc7\xb8\xf7\x84\xc9\xc9\xcc\xc6\x70\x42\x5e\xa9\x8b\xa2\x34\xd3\xff\x76\x1b\xd2\xdd\xc9\x03\x43\x2c\xac\xa6\x82\xc5\x38\x67\xc9\x99\xd8\x1e\x7b\x4e\x91\x7a\xf4\x75\xac\x94\x5b\x1c\x14\x43\x64\x6d\xcc\x65\x5f\x45\x2d\xd2\x9f\xd2\x4d\xba\x9f\x00\x00\x00\xff\xff\xac\x11\xa0\x0e\xcc\x01\x00\x00")

func stashElasticsearchPlansElasticsearchCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_stashElasticsearchPlansElasticsearchCommunityJson,
		"stash-elasticsearch-plans/elasticsearch-community.json",
	)
}

func stashElasticsearchPlansElasticsearchCommunityJson() (*asset, error) {
	bytes, err := stashElasticsearchPlansElasticsearchCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stash-elasticsearch-plans/elasticsearch-community.json", size: 460, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stashMongodbPlansMongodbCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\x4d\x4b\x03\x31\x10\x86\xef\xfd\x15\x43\xce\xf6\x43\xf4\xb4\xb7\x6a\xa9\x88\x78\xd3\x0a\x5e\x64\x9a\x0c\xbb\xb1\xf9\x22\x33\x29\x14\xd9\xff\x2e\x59\x77\x5b\xd1\x63\xc2\xc3\xf3\xbe\xf3\x7e\xcd\x00\x94\x27\x41\x83\x82\xaa\x81\xfa\x06\x50\x01\x3d\xa9\x06\x94\x8f\xa1\x8d\x66\x3f\xd7\xd1\xfb\x12\xac\x9c\xd4\xd5\x0f\xa0\x33\xa1\xd8\x18\x5e\xac\x27\x16\xf4\x49\x35\x10\x8a\x73\x33\x80\xbe\x22\x8a\x13\xe9\x8b\xcf\x9a\x6a\x4b\x0e\xc3\xc7\x43\xd0\x37\xaf\xbb\x4f\xda\xbe\x3f\x95\xd3\x6e\xf2\x4d\x81\xcf\x35\x70\x73\x07\xf7\x7f\x03\x53\x8e\xa6\x68\x79\xdc\x0c\xa2\x1c\xcd\x20\xda\xde\xbe\xe9\xc3\xb5\x5b\x99\xf5\x99\xeb\x90\x07\xd3\x5a\x8b\x3d\xd2\xf4\xbd\x2f\xc1\x38\x3a\x17\x02\x50\x25\xbb\x8a\x75\x22\x89\x9b\xe5\xf2\x50\xf6\x94\x50\x1f\xe6\x42\x2c\xba\xc3\x2c\xbc\x60\x89\x19\x5b\x5a\xb4\x31\xb6\x8e\x30\x59\x5e\xe8\xe8\x47\xe5\xaf\xd2\x2c\xc8\xdd\xfc\xff\x56\x03\xd7\x8f\x0d\xd0\xc7\x12\x44\x35\xb0\x9a\x26\x2c\x39\x53\xd0\xa7\x6a\x28\x6c\xa6\xa6\x36\x08\xe5\x23\xba\x71\x7e\xe9\xd4\x65\x53\x41\x29\x5c\x8f\xe8\x67\xfd\x77\x00\x00\x00\xff\xff\x7d\xdb\xc3\x6e\xba\x01\x00\x00")

func stashMongodbPlansMongodbCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_stashMongodbPlansMongodbCommunityJson,
		"stash-mongodb-plans/mongodb-community.json",
	)
}

func stashMongodbPlansMongodbCommunityJson() (*asset, error) {
	bytes, err := stashMongodbPlansMongodbCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stash-mongodb-plans/mongodb-community.json", size: 442, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stashMysqlPlansMysqlCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\x4f\x4b\xc3\x40\x10\xc5\xef\xfd\x14\xc3\x9e\x6d\x2b\x28\x28\xb9\x15\x05\x29\x54\x54\x2c\x78\x94\xe9\xee\x90\x2c\xdd\x7f\xdd\x99\x0d\x0d\x92\xef\x2e\x89\x4d\x2b\x3d\xee\xce\x9b\xdf\x7b\xf3\x7e\x66\x00\xca\x93\xa0\x41\x41\x55\xc1\xf0\x06\x50\x01\x3d\xa9\x0a\x94\xef\xf8\xe0\xe6\x3a\x7a\x5f\x82\x95\x4e\xdd\xfc\x8d\x75\x26\x14\x1b\xc3\xd6\x7a\x62\x41\x9f\x54\x05\xa1\x38\x37\x03\xe8\x07\x89\xe2\x44\xfa\x42\xb3\x66\x60\x25\x87\xe1\xfb\x25\xe8\xbb\xc3\x71\x95\xd6\x9b\xed\xfd\x7b\x3d\xf1\x26\xbb\xd7\xee\xf3\x63\x03\x4f\xd7\x76\x29\x47\x53\xb4\xac\x9f\x47\x4c\x8e\x66\xc4\x94\x37\x93\x56\x5f\x0f\xed\xf1\xf1\xac\x6b\x90\x47\xce\x4a\x8b\x6d\x69\xfa\xde\x95\x60\x1c\x9d\xe3\x00\xa8\x92\xdd\x20\x6b\x44\x12\x57\xcb\xe5\xbe\xec\x28\xa1\xde\xcf\x85\x58\x74\x83\x59\x78\xc1\x12\x33\xd6\xb4\xa8\x63\xac\x1d\x61\xb2\xbc\xd0\xd1\x9f\x90\xff\x22\xb3\x20\x37\xf3\xeb\x9e\x46\x55\x7f\xf2\x47\x1f\x4b\x10\x55\xc1\xed\x54\x5f\xc9\x99\x82\xee\x86\xfd\xc2\x66\xca\x69\x83\x50\x6e\x71\x8c\xe6\x63\x90\x46\x5d\xfa\x14\x94\xc2\xc3\x09\xfd\xac\xff\x0d\x00\x00\xff\xff\x10\x78\x4a\x39\xb4\x01\x00\x00")

func stashMysqlPlansMysqlCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_stashMysqlPlansMysqlCommunityJson,
		"stash-mysql-plans/mysql-community.json",
	)
}

func stashMysqlPlansMysqlCommunityJson() (*asset, error) {
	bytes, err := stashMysqlPlansMysqlCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stash-mysql-plans/mysql-community.json", size: 436, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stashPerconaXtradbPlansPerconaXtradbCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\x4f\x4b\x33\x31\x10\xc6\xef\xfd\x14\x43\xce\xef\xb6\x7d\x15\x11\xf6\x66\x2d\xb4\xea\xa5\xa2\x07\x6f\x32\x4d\x86\x6e\xe8\xe6\x0f\x93\x49\x75\x91\xfd\xee\xb2\x69\xb7\x15\xc1\x63\xc2\xc3\xef\xf9\xcd\xf3\x35\x01\x50\x8e\x04\x0d\x0a\xaa\x1a\x86\x37\x80\xf2\xe8\x48\xd5\xa0\x22\xb1\x0e\x1e\xab\x4f\x61\x34\xdb\x4a\x07\xe7\xb2\xb7\xd2\xa9\x7f\xc7\x9c\x66\x42\xb1\xc1\xbf\x5a\x47\x49\xd0\x45\x55\x83\xcf\x6d\x3b\x01\xe8\x87\x88\x4a\x91\xf4\x05\x6b\x4d\x81\xb6\xe8\xdf\x57\x5e\x5f\x5f\xdd\xe2\x0d\xaf\x3a\x9a\x3f\x8f\xbc\xb1\x77\x73\xec\x85\x37\x61\x5c\x2e\xe0\xfe\x77\x6f\xe4\x60\xb2\x96\x87\x65\xe1\x71\x30\x85\xf7\xf8\xff\xe3\xe5\x69\xb1\xd6\xeb\xcd\x39\xd7\x60\x2a\xc0\x3b\x2d\xf6\x40\xe3\xf7\x36\x7b\xd3\xd2\xd9\x0b\x40\x65\x6e\x87\x58\x23\x12\x53\x3d\x9b\xed\xf3\x96\x22\xea\x7d\x25\x94\x44\x37\xc8\x92\xa6\x49\x02\xe3\x8e\xa6\xbb\x10\x76\x2d\x61\xb4\x69\xaa\x83\x3b\x21\x7f\xb8\x27\xc1\xd4\x54\x7f\x2e\x57\xe2\xfd\x49\x04\x5d\xc8\x5e\x54\x0d\xf3\x71\xd0\xcc\x4c\x5e\x77\x03\x28\x27\x33\x0a\x5b\x2f\xc4\x07\x2c\x8e\x2e\x78\x69\xd4\x65\x61\x41\xc9\x69\xb8\xa5\x9f\xf4\xdf\x01\x00\x00\xff\xff\x35\x7e\xf5\xe3\xcf\x01\x00\x00")

func stashPerconaXtradbPlansPerconaXtradbCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_stashPerconaXtradbPlansPerconaXtradbCommunityJson,
		"stash-percona-xtradb-plans/percona-xtradb-community.json",
	)
}

func stashPerconaXtradbPlansPerconaXtradbCommunityJson() (*asset, error) {
	bytes, err := stashPerconaXtradbPlansPerconaXtradbCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stash-percona-xtradb-plans/percona-xtradb-community.json", size: 463, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stashPlansStashCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xcf\x4a\x73\x31\x10\xc5\xf7\x7d\x8a\x21\xeb\xaf\xed\x07\xba\xba\xbb\x52\x41\x5c\x88\x8a\x8a\xd8\x8d\x4c\x93\xe1\x26\x34\xff\xc8\x4c\x5a\x8b\xdc\x77\x97\x5c\x7b\x5b\x70\xe1\x32\x39\x67\x7e\xe7\x70\xbe\x66\x00\x2a\x90\xa0\x41\x41\xd5\x41\x7b\x03\xa8\x88\x81\x54\x07\x8a\x05\xd9\xce\x75\x0a\xa1\x46\x27\x47\xf5\xef\x47\xd6\x85\x50\x5c\x8a\x2f\x2e\x10\x0b\x86\xac\x3a\x88\xd5\xfb\x19\xc0\xd0\x2c\x8a\x33\xe9\x0b\xcd\x99\xc6\xca\x1e\xe3\xc7\x6d\xd4\x57\xf6\x71\xf3\xb9\xb2\x07\x7e\x78\x9f\x78\x53\xdc\x73\x8b\x83\xf5\xef\xb8\x5c\x92\xa9\x5a\xee\x6e\x46\x4c\x49\x66\xc4\x1c\xae\x9f\x36\xaf\x7e\x7d\xff\x96\xcf\x3e\x8b\x3c\x72\x56\x5a\xdc\x9e\xa6\xef\x6d\x8d\xc6\xd3\xb9\x0e\x80\xaa\xc5\x37\x9b\x15\xc9\xdc\x2d\x97\xbb\xba\xa5\x8c\x7a\x37\x17\x62\xd1\x16\x8b\xf0\x82\x25\x15\xec\x69\xd1\xa7\xd4\x7b\xc2\xec\x78\xa1\x53\x38\x21\xff\x58\x68\xd4\x87\x53\x32\x86\x54\xa3\xa8\x0e\xfe\x4f\xc3\xd5\x52\x28\xea\x63\xbb\xac\x6c\xa6\x86\x2e\x0a\x95\x3d\x8e\xa5\x42\x8a\x62\xd5\x65\x49\x41\xa9\xdc\xca\x0f\xb3\xe1\x3b\x00\x00\xff\xff\x28\xc1\x5a\x4e\xae\x01\x00\x00")

func stashPlansStashCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_stashPlansStashCommunityJson,
		"stash-plans/stash-community.json",
	)
}

func stashPlansStashCommunityJson() (*asset, error) {
	bytes, err := stashPlansStashCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stash-plans/stash-community.json", size: 430, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stashPostgresPlansPostgresqlCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\x41\x4b\x33\x31\x10\x86\xef\xfd\x15\x43\xce\x5f\xdb\x0f\x04\xc5\xbd\x89\x45\x29\x28\xb6\xd8\xbb\x4c\xb3\xc3\x6e\x6c\x92\x89\x99\x49\xa5\xc8\xfe\x77\xd9\x6d\xb7\x2d\x1e\x13\x5e\x9e\xf7\x9d\xe7\x67\x02\x60\x02\x29\xd6\xa8\x68\x2a\xe8\xdf\x00\x26\x62\x20\x53\x81\x49\x2c\xda\x64\x92\x2f\x3f\xb5\x1c\x42\x89\x4e\x0f\xe6\xdf\x31\x63\x33\xa1\x3a\x8e\x1b\x17\x48\x14\x43\x32\x15\xc4\xe2\xfd\x04\xa0\xeb\x23\x46\x12\xd9\x0b\xd2\xd5\x03\xd0\x63\xfc\x78\x8e\xf6\xe6\xf5\xee\xfe\x6d\x73\xbb\x8b\x8b\x7a\xe4\x8d\x9d\xab\x63\xe7\xfb\xfa\x05\x1e\xff\x76\xa6\xcc\x75\xb1\xba\x5c\x0c\xac\xcc\xf5\xc0\x3a\x7c\x2e\x57\xf8\x5d\x78\xfd\x74\xce\xb5\x28\x03\xec\xc1\xaa\xdb\xd3\xf8\xbd\x2d\xb1\xf6\x74\xde\x04\x60\x4a\xf6\x7d\xac\x55\x4d\x52\xcd\xe7\xbb\xb2\xa5\x84\x76\x37\x55\x12\xb5\x2d\x66\x95\x99\x28\x67\x6c\x68\xd6\x30\x37\x9e\x30\x39\x99\x59\x0e\x27\xe4\xd5\x6e\x51\x94\x76\x3a\x1a\xbb\xf2\x35\x04\xbb\xd3\x04\x0c\x5c\xa2\x9a\x0a\xfe\x8f\x1a\x4b\xce\x14\xed\xa1\x47\x14\x39\xdb\x70\x51\x29\xef\x71\x58\x17\x38\x6a\x6b\x2e\x5e\x15\xb5\x48\x7f\x45\x37\xe9\x7e\x03\x00\x00\xff\xff\x94\x42\x46\x98\xc1\x01\x00\x00")

func stashPostgresPlansPostgresqlCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_stashPostgresPlansPostgresqlCommunityJson,
		"stash-postgres-plans/postgresql-community.json",
	)
}

func stashPostgresPlansPostgresqlCommunityJson() (*asset, error) {
	bytes, err := stashPostgresPlansPostgresqlCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stash-postgres-plans/postgresql-community.json", size: 449, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _swiftPlansSwiftCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xcf\x4a\x33\x41\x10\xc4\xef\x79\x8a\x66\xce\x5f\x92\x0f\x72\xdb\x5b\x50\x11\x3d\x88\xba\x81\x1c\xa5\x33\xd3\xee\x0e\x99\x7f\xcc\x74\x47\x17\xd9\x77\x97\x59\xb3\x09\x78\xf0\x38\x53\xd5\xbf\x2a\xea\x6b\x01\xa0\x3c\x31\x1a\x64\x54\x0d\xd4\x37\x80\x0a\xe8\x49\x35\xa0\xca\x87\x7d\xe7\xa5\x8e\xde\x4b\xb0\x3c\xa8\x7f\x3f\xb2\xce\x84\x6c\x63\xd8\x59\x4f\x85\xd1\x27\xd5\x40\x10\xe7\x16\x00\x63\xb5\xa8\x92\x48\x5f\x69\xd6\x54\x56\x72\x18\xde\xee\x83\xde\x0c\x2f\xad\xec\x06\xfa\x7c\x7d\x9a\x79\x73\x5c\x5b\xe3\xe0\xe6\x77\x5c\xca\xd1\x88\xe6\x87\xdb\x09\x93\xa3\x99\x30\xfb\xc7\x76\xdb\xf3\xdd\xf3\x66\x7f\xf1\xf5\x58\x26\xce\x56\xb3\x3d\xd1\xfc\x7d\x90\x60\x1c\x5d\xea\x00\x28\xc9\xae\xda\x7a\xe6\x54\x9a\xf5\xfa\x28\x07\x4a\xa8\x8f\x4b\xa6\xc2\xba\xc7\xcc\x65\x55\x38\x66\xec\x68\xd5\xc5\xd8\x39\xc2\x64\xcb\x4a\x47\x7f\x46\xfe\xb1\xd0\xa4\x8f\xe7\x64\xf4\x51\x02\xab\x06\xfe\xcf\xc3\x49\xce\x14\xf4\x50\x2f\xa5\x98\xb9\xa1\x0d\x4c\xf9\x84\x53\x29\x1f\x03\xf7\xea\xba\x24\x23\x4b\xa9\xe5\xc7\xc5\xf8\x1d\x00\x00\xff\xff\x43\x3a\xc9\x5b\xae\x01\x00\x00")

func swiftPlansSwiftCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_swiftPlansSwiftCommunityJson,
		"swift-plans/swift-community.json",
	)
}

func swiftPlansSwiftCommunityJson() (*asset, error) {
	bytes, err := swiftPlansSwiftCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "swift-plans/swift-community.json", size: 430, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _voyagerPlansVoyagerCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xbb\x6a\x03\x31\x10\x45\x7b\x7f\xc5\xa0\x3a\xb6\xf3\x70\xb5\x5d\x70\xc0\xb8\x4b\x11\x07\x52\x85\xf1\x68\xd8\x15\xd6\x2b\xd2\x68\xc9\x12\xf6\xdf\x83\xd6\x5e\x1b\x52\xa4\x94\x38\x73\xee\xe5\xfe\x2c\x00\x94\x63\x41\x8d\x82\xaa\x81\xfa\x06\x50\x1e\x1d\xab\x06\x54\x1f\x06\x6c\x39\x2d\x29\x38\x57\xbc\x91\x41\xdd\x9d\x01\x4a\x8c\x62\x82\x7f\x33\x8e\xb3\xa0\x8b\xaa\x01\x5f\xac\x5d\x00\x8c\x15\x51\x39\x32\xdd\x7c\x46\x57\x5b\xb4\xe8\x3f\x77\x9e\x9e\x88\xbe\xf4\x47\xd9\x6f\x5e\x0f\xb3\x6f\x0e\x7c\x3f\x07\xc2\xf6\x6f\x60\x4c\x41\x17\x92\xfd\xcb\x24\x4a\x41\x4f\xa2\xc3\x2e\xcb\xf7\xe3\xf6\xc1\x6c\xae\x5c\x87\x79\x32\x3d\x93\x98\x9e\xe7\xef\x63\xf1\xda\xf2\xb5\x10\x80\x2a\xc9\x56\xac\x13\x89\xb9\x59\xaf\x4f\xe5\xc8\x11\xe9\xb4\x14\xce\x42\x1d\x26\xc9\xab\x2c\x21\x61\xcb\xab\x36\x84\xd6\x32\x46\x93\x57\x14\xdc\x45\xf9\xef\x4a\x13\x31\x5e\xb2\xd1\x85\xe2\x45\x35\x70\x3f\x8f\x57\x52\x62\x4f\x43\xbd\x2d\x59\xcf\x1d\x8d\x17\x4e\x3d\x4e\xb5\x5c\xf0\xd2\xa9\xdb\x9a\x82\x52\x72\xad\x3f\x2e\xc6\xdf\x00\x00\x00\xff\xff\x85\xa4\x43\x61\xb4\x01\x00\x00")

func voyagerPlansVoyagerCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_voyagerPlansVoyagerCommunityJson,
		"voyager-plans/voyager-community.json",
	)
}

func voyagerPlansVoyagerCommunityJson() (*asset, error) {
	bytes, err := voyagerPlansVoyagerCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "voyager-plans/voyager-community.json", size: 436, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"appscode-plans/appscode-community.json":                   appscodePlansAppscodeCommunityJson,
	"bytebuilders-plans/bytebuilders-community.json":           bytebuildersPlansBytebuildersCommunityJson,
	"guard-plans/guard-community.json":                         guardPlansGuardCommunityJson,
	"kubeci-plans/kubeci-community.json":                       kubeciPlansKubeciCommunityJson,
	"kubed-plans/kubed-community.json":                         kubedPlansKubedCommunityJson,
	"kubedb-plans/kubedb-community.json":                       kubedbPlansKubedbCommunityJson,
	"kubedb-plans/kubedb-enterprise.json":                      kubedbPlansKubedbEnterpriseJson,
	"kubeform-plans/kubeform-community.json":                   kubeformPlansKubeformCommunityJson,
	"kubeshield-plans/kubeshield-community.json":               kubeshieldPlansKubeshieldCommunityJson,
	"kubevault-plans/kubevault-community.json":                 kubevaultPlansKubevaultCommunityJson,
	"pharmer-plans/pharmer-community.json":                     pharmerPlansPharmerCommunityJson,
	"searchlight-plans/searchlight-community.json":             searchlightPlansSearchlightCommunityJson,
	"service-broker-plans/servicebroker-community.json":        serviceBrokerPlansServicebrokerCommunityJson,
	"stash-cli-plans/stash-kubectl-plugin-community.json":      stashCliPlansStashKubectlPluginCommunityJson,
	"stash-elasticsearch-plans/elasticsearch-community.json":   stashElasticsearchPlansElasticsearchCommunityJson,
	"stash-mongodb-plans/mongodb-community.json":               stashMongodbPlansMongodbCommunityJson,
	"stash-mysql-plans/mysql-community.json":                   stashMysqlPlansMysqlCommunityJson,
	"stash-percona-xtradb-plans/percona-xtradb-community.json": stashPerconaXtradbPlansPerconaXtradbCommunityJson,
	"stash-plans/stash-community.json":                         stashPlansStashCommunityJson,
	"stash-postgres-plans/postgresql-community.json":           stashPostgresPlansPostgresqlCommunityJson,
	"swift-plans/swift-community.json":                         swiftPlansSwiftCommunityJson,
	"voyager-plans/voyager-community.json":                     voyagerPlansVoyagerCommunityJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"appscode-plans": &bintree{nil, map[string]*bintree{
		"appscode-community.json": &bintree{appscodePlansAppscodeCommunityJson, map[string]*bintree{}},
	}},
	"bytebuilders-plans": &bintree{nil, map[string]*bintree{
		"bytebuilders-community.json": &bintree{bytebuildersPlansBytebuildersCommunityJson, map[string]*bintree{}},
	}},
	"guard-plans": &bintree{nil, map[string]*bintree{
		"guard-community.json": &bintree{guardPlansGuardCommunityJson, map[string]*bintree{}},
	}},
	"kubeci-plans": &bintree{nil, map[string]*bintree{
		"kubeci-community.json": &bintree{kubeciPlansKubeciCommunityJson, map[string]*bintree{}},
	}},
	"kubed-plans": &bintree{nil, map[string]*bintree{
		"kubed-community.json": &bintree{kubedPlansKubedCommunityJson, map[string]*bintree{}},
	}},
	"kubedb-plans": &bintree{nil, map[string]*bintree{
		"kubedb-community.json":  &bintree{kubedbPlansKubedbCommunityJson, map[string]*bintree{}},
		"kubedb-enterprise.json": &bintree{kubedbPlansKubedbEnterpriseJson, map[string]*bintree{}},
	}},
	"kubeform-plans": &bintree{nil, map[string]*bintree{
		"kubeform-community.json": &bintree{kubeformPlansKubeformCommunityJson, map[string]*bintree{}},
	}},
	"kubeshield-plans": &bintree{nil, map[string]*bintree{
		"kubeshield-community.json": &bintree{kubeshieldPlansKubeshieldCommunityJson, map[string]*bintree{}},
	}},
	"kubevault-plans": &bintree{nil, map[string]*bintree{
		"kubevault-community.json": &bintree{kubevaultPlansKubevaultCommunityJson, map[string]*bintree{}},
	}},
	"pharmer-plans": &bintree{nil, map[string]*bintree{
		"pharmer-community.json": &bintree{pharmerPlansPharmerCommunityJson, map[string]*bintree{}},
	}},
	"searchlight-plans": &bintree{nil, map[string]*bintree{
		"searchlight-community.json": &bintree{searchlightPlansSearchlightCommunityJson, map[string]*bintree{}},
	}},
	"service-broker-plans": &bintree{nil, map[string]*bintree{
		"servicebroker-community.json": &bintree{serviceBrokerPlansServicebrokerCommunityJson, map[string]*bintree{}},
	}},
	"stash-cli-plans": &bintree{nil, map[string]*bintree{
		"stash-kubectl-plugin-community.json": &bintree{stashCliPlansStashKubectlPluginCommunityJson, map[string]*bintree{}},
	}},
	"stash-elasticsearch-plans": &bintree{nil, map[string]*bintree{
		"elasticsearch-community.json": &bintree{stashElasticsearchPlansElasticsearchCommunityJson, map[string]*bintree{}},
	}},
	"stash-mongodb-plans": &bintree{nil, map[string]*bintree{
		"mongodb-community.json": &bintree{stashMongodbPlansMongodbCommunityJson, map[string]*bintree{}},
	}},
	"stash-mysql-plans": &bintree{nil, map[string]*bintree{
		"mysql-community.json": &bintree{stashMysqlPlansMysqlCommunityJson, map[string]*bintree{}},
	}},
	"stash-percona-xtradb-plans": &bintree{nil, map[string]*bintree{
		"percona-xtradb-community.json": &bintree{stashPerconaXtradbPlansPerconaXtradbCommunityJson, map[string]*bintree{}},
	}},
	"stash-plans": &bintree{nil, map[string]*bintree{
		"stash-community.json": &bintree{stashPlansStashCommunityJson, map[string]*bintree{}},
	}},
	"stash-postgres-plans": &bintree{nil, map[string]*bintree{
		"postgresql-community.json": &bintree{stashPostgresPlansPostgresqlCommunityJson, map[string]*bintree{}},
	}},
	"swift-plans": &bintree{nil, map[string]*bintree{
		"swift-community.json": &bintree{swiftPlansSwiftCommunityJson, map[string]*bintree{}},
	}},
	"voyager-plans": &bintree{nil, map[string]*bintree{
		"voyager-community.json": &bintree{voyagerPlansVoyagerCommunityJson, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
